digraph { 
"pandas" -> "omg-nlp-with-the-djia-and-reddit.ipynb" [label = "importedBy"]
"pd(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb" [label = "appearsIn"]
"pd(0)" -> "pandas" [label = "assignedFrom"]
"sklearn.feature_extraction.text" -> "omg-nlp-with-the-djia-and-reddit.ipynb" [label = "importedBy"]
"CountVectorizer" -> "sklearn.feature_extraction.text" [label = "importedBy"]
"CountVectorizer(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb" [label = "appearsIn"]
"CountVectorizer(0)" -> "CountVectorizer" [label = "assignedFrom"]
"sklearn.linear_model" -> "omg-nlp-with-the-djia-and-reddit.ipynb" [label = "importedBy"]
"LogisticRegression" -> "sklearn.linear_model" [label = "importedBy"]
"LogisticRegression(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb" [label = "appearsIn"]
"LogisticRegression(0)" -> "LogisticRegression" [label = "assignedFrom"]
"data(0)$0" -> "pd(0)" [label = "read_csv"]
"data(0)$1" -> "data(0)$0" [label = "head"]
"train(0)$0" -> "data(0)$1" [label = "assignedFrom"]
"train(0)$0" -> "data(0)$1" [label = "assignedFrom"]
"test(0)$0" -> "data(0)$1" [label = "assignedFrom"]
"test(0)$0" -> "data(0)$1" [label = "assignedFrom"]
"example(0)$0" -> "train(0)$0" [label = "assignedFrom"]
"print[0]" -> "example(0)$0" [label = "print"]
"example2(0)$0" -> "example(0)$0" [label = "lower"]
"print[0]" -> "example2(0)$0" [label = "print"]
"example3(0)$0" -> "CountVectorizer(0)" [label = "assignedFrom"]
"example3(0)$0" -> "example2(0)$0" [label = "assignedFrom"]
"print[0]" -> "example3(0)$0" [label = "print"]
"pd(0)$0" -> "pd(0)" [label = "DataFrame"]
"[<_ast.Name object at 0x10958d520>, <_ast.Call object at 0x10958d790>](0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb" [label = "appearsIn"]
"pd(0)$0" -> "[<_ast.Name object at 0x10958d520>, <_ast.Call object at 0x10958d790>](0)" [label = "DataFrame"]
"x(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb" [label = "appearsIn"]
"pd(0)$0" -> "x(0)" [label = "DataFrame"]
"set(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb" [label = "appearsIn"]
"pd(0)$0" -> "set(0)" [label = "DataFrame"]
"pd(0)$0" -> "example3(0)$0" [label = "DataFrame"]
"[](0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb" [label = "appearsIn"]
"trainheadlines(0)$0" -> "[](0)" [label = "assignedFrom"]
"range(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb" [label = "appearsIn"]
"row(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb" [label = "appearsIn"]
"row(0)" -> "range(0)" [label = "iteratorOf"]
"len(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb" [label = "appearsIn"]
"row(0)" -> "len(0)" [label = "iteratorOf"]
"row(0)" -> "train(0)$0" [label = "iteratorOf"]
"trainheadlines(0)$1" -> "trainheadlines(0)$0" [label = "append"]
"str(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb" [label = "appearsIn"]
"trainheadlines(0)$1" -> "str(0)" [label = "append"]
"trainheadlines(0)$1" -> "x(0)" [label = "append"]
"trainheadlines(0)$1" -> "x(0)" [label = "append"]
"trainheadlines(0)$1" -> "train(0)$0" [label = "append"]
"trainheadlines(0)$1" -> "row(0)" [label = "append"]
"basicvectorizer(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb" [label = "appearsIn"]
"basictrain(0)$0" -> "basicvectorizer(0)" [label = "fit_transform"]
"basictrain(0)$0" -> "trainheadlines(0)$1" [label = "fit_transform"]
"print[0]" -> "basictrain(0)$0" [label = "print"]
"basicmodel(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb" [label = "appearsIn"]
"basicmodel(0)$0" -> "basicmodel(0)" [label = "fit"]
"basicmodel(0)$0" -> "basictrain(0)$0" [label = "fit"]
"basicmodel(0)$0" -> "train(0)$0" [label = "fit"]
"testheadlines(0)$0" -> "[](0)" [label = "assignedFrom"]
"row(0)" -> "range(0)" [label = "iteratorOf"]
"row(0)" -> "len(0)" [label = "iteratorOf"]
"row(0)" -> "test(0)$0" [label = "iteratorOf"]
"testheadlines(0)$1" -> "testheadlines(0)$0" [label = "append"]
"testheadlines(0)$1" -> "str(0)" [label = "append"]
"testheadlines(0)$1" -> "x(0)" [label = "append"]
"testheadlines(0)$1" -> "x(0)" [label = "append"]
"testheadlines(0)$1" -> "test(0)$0" [label = "append"]
"testheadlines(0)$1" -> "row(0)" [label = "append"]
"basictest(0)$0" -> "basicvectorizer(0)" [label = "transform"]
"basictest(0)$0" -> "testheadlines(0)$1" [label = "transform"]
"predictions(0)$0" -> "basicmodel(0)$0" [label = "predict"]
"predictions(0)$0" -> "basictest(0)$0" [label = "predict"]
"pd(0)$1" -> "pd(0)$0" [label = "crosstab"]
"pd(0)$1" -> "test(0)$0" [label = "crosstab"]
"pd(0)$1" -> "predictions(0)$0" [label = "crosstab"]
"basicwords(0)$0" -> "basicvectorizer(0)" [label = "get_feature_names"]
"basiccoeffs(0)$0" -> "basicmodel(0)$0" [label = "assignedFrom"]
"coeffdf(0)$0" -> "pd(0)$1" [label = "DataFrame"]
"coeffdf(0)$0" -> "basicwords(0)$0" [label = "DataFrame"]
"coeffdf(0)$0" -> "basiccoeffs(0)$0" [label = "DataFrame"]
"coeffdf(0)$1" -> "coeffdf(0)$0" [label = "sort_values"]
"[<_ast.Constant object at 0x109540cd0>, <_ast.Constant object at 0x1095402e0>](0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb" [label = "appearsIn"]
"coeffdf(0)$1" -> "[<_ast.Constant object at 0x109540cd0>, <_ast.Constant object at 0x1095402e0>](0)" [label = "sort_values"]
"[<_ast.Constant object at 0x1095400a0>, <_ast.Constant object at 0x109540370>](0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb" [label = "appearsIn"]
"coeffdf(0)$1" -> "[<_ast.Constant object at 0x1095400a0>, <_ast.Constant object at 0x109540370>](0)" [label = "sort_values"]
"coeffdf(0)$2" -> "coeffdf(0)$1" [label = "head"]
"coeffdf(0)$3" -> "coeffdf(0)$2" [label = "tail"]
"advancedvectorizer(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb" [label = "appearsIn"]
"advancedtrain(0)$0" -> "advancedvectorizer(0)" [label = "fit_transform"]
"advancedtrain(0)$0" -> "trainheadlines(0)$1" [label = "fit_transform"]
"print[0]" -> "advancedtrain(0)$0" [label = "print"]
"advancedmodel(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb" [label = "appearsIn"]
"advancedmodel(0)$0" -> "advancedmodel(0)" [label = "fit"]
"advancedmodel(0)$0" -> "advancedtrain(0)$0" [label = "fit"]
"advancedmodel(0)$0" -> "train(0)$0" [label = "fit"]
"testheadlines(0)$2" -> "[](0)" [label = "assignedFrom"]
"row(0)" -> "range(0)" [label = "iteratorOf"]
"row(0)" -> "len(0)" [label = "iteratorOf"]
"row(0)" -> "test(0)$0" [label = "iteratorOf"]
"testheadlines(0)$3" -> "testheadlines(0)$2" [label = "append"]
"testheadlines(0)$3" -> "str(0)" [label = "append"]
"testheadlines(0)$3" -> "x(0)" [label = "append"]
"testheadlines(0)$3" -> "x(0)" [label = "append"]
"testheadlines(0)$3" -> "test(0)$0" [label = "append"]
"testheadlines(0)$3" -> "row(0)" [label = "append"]
"advancedtest(0)$0" -> "advancedvectorizer(0)" [label = "transform"]
"advancedtest(0)$0" -> "testheadlines(0)$3" [label = "transform"]
"advpredictions(0)$0" -> "advancedmodel(0)$0" [label = "predict"]
"advpredictions(0)$0" -> "advancedtest(0)$0" [label = "predict"]
"pd(0)$2" -> "pd(0)$1" [label = "crosstab"]
"pd(0)$2" -> "test(0)$0" [label = "crosstab"]
"pd(0)$2" -> "advpredictions(0)$0" [label = "crosstab"]
"advwords(0)$0" -> "advancedvectorizer(0)" [label = "get_feature_names"]
"advcoeffs(0)$0" -> "advancedmodel(0)$0" [label = "assignedFrom"]
"advcoeffdf(0)$0" -> "pd(0)$2" [label = "DataFrame"]
"advcoeffdf(0)$0" -> "advwords(0)$0" [label = "DataFrame"]
"advcoeffdf(0)$0" -> "advcoeffs(0)$0" [label = "DataFrame"]
"advcoeffdf(0)$1" -> "advcoeffdf(0)$0" [label = "sort_values"]
"[<_ast.Constant object at 0x1095308b0>, <_ast.Constant object at 0x109530220>](0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb" [label = "appearsIn"]
"advcoeffdf(0)$1" -> "[<_ast.Constant object at 0x1095308b0>, <_ast.Constant object at 0x109530220>](0)" [label = "sort_values"]
"[<_ast.Constant object at 0x109530190>, <_ast.Constant object at 0x109530280>](0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb" [label = "appearsIn"]
"advcoeffdf(0)$1" -> "[<_ast.Constant object at 0x109530190>, <_ast.Constant object at 0x109530280>](0)" [label = "sort_values"]
"advcoeffdf(0)$2" -> "advcoeffdf(0)$1" [label = "head"]
"advcoeffdf(0)$3" -> "advcoeffdf(0)$2" [label = "tail"]
}
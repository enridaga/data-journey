digraph "" {
	numpy -> "analyzing-quora-for-the-insinceres.ipynb"	[label=importedBy];
	"np(0)" -> numpy	[label=assignedFrom];
	"np(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	pandas -> "analyzing-quora-for-the-insinceres.ipynb"	[label=importedBy];
	"pd(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"pd(0)" -> pandas	[label=assignedFrom];
	tqdm -> "analyzing-quora-for-the-insinceres.ipynb"	[label=importedBy];
	tqdm -> tqdm	[label=importedBy];
	"tqdm(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"tqdm(0)" -> tqdm	[label=assignedFrom];
	string -> "analyzing-quora-for-the-insinceres.ipynb"	[label=importedBy];
	"string(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"string(0)" -> string	[label=assignedFrom];
	random -> "analyzing-quora-for-the-insinceres.ipynb"	[label=importedBy];
	"random(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"random(0)" -> random	[label=assignedFrom];
	operator -> "analyzing-quora-for-the-insinceres.ipynb"	[label=importedBy];
	"operator(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"operator(0)" -> operator	[label=assignedFrom];
	"matplotlib.pyplot" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=importedBy];
	"plt(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"plt(0)" -> "matplotlib.pyplot"	[label=assignedFrom];
	seaborn -> "analyzing-quora-for-the-insinceres.ipynb"	[label=importedBy];
	"sns(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"sns(0)" -> seaborn	[label=assignedFrom];
	"sklearn.decomposition" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=importedBy];
	NMF -> "sklearn.decomposition"	[label=importedBy];
	"NMF(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"NMF(0)" -> NMF	[label=assignedFrom];
	LatentDirichletAllocation -> "sklearn.decomposition"	[label=importedBy];
	"LatentDirichletAllocation(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"LatentDirichletAllocation(0)" -> LatentDirichletAllocation	[label=assignedFrom];
	TruncatedSVD -> "sklearn.decomposition"	[label=importedBy];
	"TruncatedSVD(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"TruncatedSVD(0)" -> TruncatedSVD	[label=assignedFrom];
	statistics -> "analyzing-quora-for-the-insinceres.ipynb"	[label=importedBy];
	"*" -> statistics	[label=importedBy];
	"*(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"*(0)" -> "*"	[label=assignedFrom];
	"sklearn.feature_extraction.text" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=importedBy];
	CountVectorizer -> "sklearn.feature_extraction.text"	[label=importedBy];
	"CountVectorizer(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"CountVectorizer(0)" -> CountVectorizer	[label=assignedFrom];
	"concurrent.futures" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=importedBy];
	"concurrent.futures(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"concurrent.futures(0)" -> "concurrent.futures"	[label=assignedFrom];
	time -> "analyzing-quora-for-the-insinceres.ipynb"	[label=importedBy];
	"time(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"time(0)" -> time	[label=assignedFrom];
	"pyLDAvis.sklearn" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=importedBy];
	"pyLDAvis.sklearn(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"pyLDAvis.sklearn(0)" -> "pyLDAvis.sklearn"	[label=assignedFrom];
	pylab -> "analyzing-quora-for-the-insinceres.ipynb"	[label=importedBy];
	bone -> pylab	[label=importedBy];
	"bone(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"bone(0)" -> bone	[label=assignedFrom];
	pcolor -> pylab	[label=importedBy];
	"pcolor(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"pcolor(0)" -> pcolor	[label=assignedFrom];
	colorbar -> pylab	[label=importedBy];
	"colorbar(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"colorbar(0)" -> colorbar	[label=assignedFrom];
	plot -> pylab	[label=importedBy];
	"plot(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"plot(0)" -> plot	[label=assignedFrom];
	show -> pylab	[label=importedBy];
	"show(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"show(0)" -> show	[label=assignedFrom];
	rcParams -> pylab	[label=importedBy];
	"rcParams(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"rcParams(0)" -> rcParams	[label=assignedFrom];
	savefig -> pylab	[label=importedBy];
	"savefig(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"savefig(0)" -> savefig	[label=assignedFrom];
	textstat -> "analyzing-quora-for-the-insinceres.ipynb"	[label=importedBy];
	"textstat(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"textstat(0)" -> textstat	[label=assignedFrom];
	warnings -> "analyzing-quora-for-the-insinceres.ipynb"	[label=importedBy];
	"warnings(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"warnings(0)" -> warnings	[label=assignedFrom];
	nltk -> "analyzing-quora-for-the-insinceres.ipynb"	[label=importedBy];
	"nltk(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"nltk(0)" -> nltk	[label=assignedFrom];
	"warnings(0)$0" -> warnings	[label=assignedFrom];
	"warnings(0)$0" -> "warnings(0)"	[label=filterwarnings];
	"warnings(0)$0" -> "ignore(0)"	[label=filterwarnings];
	"ignore(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	os -> "analyzing-quora-for-the-insinceres.ipynb"	[label=importedBy];
	"os(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"os(0)" -> os	[label=assignedFrom];
	"print[0]" -> "os(0)"	[label=print];
	"print[0]" -> "vectorizer(9)"	[label=print];
	"print[0]" -> "Topic \%d:(9)"	[label=print];
	"print[0]" -> "Sincere questions LDA Model:(0)"	[label=print];
	"print[0]" -> "Insincere questions LDA Model:(0)"	[label=print];
	"vectorizer(9)" -> "selected_topics[1]"	[label=_argToVar];
	"Sincere questions LDA Model:(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"Insincere questions LDA Model:(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"../input(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"print[1]" -> "../input(0)"	[label=print];
	"print[1]" -> "idx(9)"	[label=print];
	"print[1]" -> "i(9)"	[label=print];
	"idx(9)" -> "model(9)"	[label=iteratorOf];
	"idx(9)" -> "enumerate(9)"	[label=iteratorOf];
	plotly -> "analyzing-quora-for-the-insinceres.ipynb"	[label=importedBy];
	tools -> plotly	[label=importedBy];
	"tools(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"tools(0)" -> tools	[label=assignedFrom];
	"plotly.plotly" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=importedBy];
	"py(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"py(0)" -> "plotly.plotly"	[label=assignedFrom];
	"plotly.offline" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=importedBy];
	init_notebook_mode -> "plotly.offline"	[label=importedBy];
	"init_notebook_mode(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"init_notebook_mode(0)" -> init_notebook_mode	[label=assignedFrom];
	iplot -> "plotly.offline"	[label=importedBy];
	"iplot(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"iplot(0)" -> iplot	[label=assignedFrom];
	"True(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"init_notebook_mode[0]" -> "True(0)"	[label=init_notebook_mode];
	"plotly.graph_objs" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=importedBy];
	"go(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"go(0)" -> "plotly.graph_objs"	[label=assignedFrom];
	"plotly.figure_factory" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=importedBy];
	"ff(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"ff(0)" -> "plotly.figure_factory"	[label=assignedFrom];
	spacy -> "analyzing-quora-for-the-insinceres.ipynb"	[label=importedBy];
	"spacy(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"spacy(0)" -> spacy	[label=assignedFrom];
	"spacy.lang.en.stop_words" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=importedBy];
	STOP_WORDS -> "spacy.lang.en.stop_words"	[label=importedBy];
	"STOP_WORDS(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"STOP_WORDS(0)" -> STOP_WORDS	[label=assignedFrom];
	"spacy.lang.en" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=importedBy];
	English -> "spacy.lang.en"	[label=importedBy];
	"English(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"English(0)" -> English	[label=assignedFrom];
	"warnings(0)$1" -> "warnings(0)$0"	[label=filterwarnings];
	"warnings(0)$1" -> "ignore(0)"	[label=filterwarnings];
	"quora_train(0)$0" -> "pd(0)"	[label=read_csv];
	"quora_train(0)$0" -> "../input/train.csv(0)"	[label=read_csv];
	"../input/train.csv(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"quora_train(0)$1" -> "quora_train(0)$0"	[label=head];
	"punctuations(0)$0" -> "string(0)"	[label=assignedFrom];
	"stopwords(0)$0" -> "STOP_WORDS(0)"	[label=list];
	"sentence(1)" -> "spacy_tokenizer[0]"	[label=_argToVar];
	"mytokens(1)$0" -> "sentence(1)"	[label=parser];
	"mytokens(1)$1" -> "mytokens(1)$1"	[label=assignedFrom];
	"mytokens(1)$1" -> "word(1)"	[label=assignedFrom];
	"mytokens(1)$1" -> "-PRON-(1)"	[label=assignedFrom];
	"mytokens(1)$2" -> "word(1)"	[label=assignedFrom];
	"mytokens(1)$2" -> "mytokens(1)$2"	[label=assignedFrom];
	"mytokens(1)$2" -> "stopwords(1)"	[label=assignedFrom];
	"mytokens(1)$2" -> "punctuations(1)"	[label=assignedFrom];
	"mytokens(1)$3" -> "mytokens(1)$3"	[label=join];
	"mytokens(1)$3" -> " (1)"	[label=join];
	"mytokens(1)$3" -> "i(1)"	[label=join];
	"tqdm(0)$0" -> "tqdm(0)"	[label=pandas];
	"sincere_questions(0)$0" -> "quora_train(0)$1"	[label=progress_apply];
	"sincere_questions(0)$0" -> "question_text(0)"	[label=progress_apply];
	"sincere_questions(0)$0" -> "target(0)"	[label=progress_apply];
	"sincere_questions(0)$0" -> "0(0)"	[label=progress_apply];
	"sincere_questions(0)$0" -> "spacy_tokenizer(0)"	[label=progress_apply];
	"question_text(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"target(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"0(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"spacy_tokenizer(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"insincere_questions(0)$0" -> "quora_train(0)$1"	[label=progress_apply];
	"insincere_questions(0)$0" -> "question_text(0)"	[label=progress_apply];
	"insincere_questions(0)$0" -> "target(0)"	[label=progress_apply];
	"insincere_questions(0)$0" -> "spacy_tokenizer(0)"	[label=progress_apply];
	"insincere_questions(0)$0" -> "1(0)"	[label=progress_apply];
	"1(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"a(2)" -> "plot_readability[0]"	[label=_argToVar];
	"plot_readability[0]" -> "syllable_sincere(0)$0"	[label=plot_readability];
	"plot_readability[0]" -> "lexicon_sincere(0)$0"	[label=plot_readability];
	"plot_readability[0]" -> "length_sincere(0)$0"	[label=plot_readability];
	"plot_readability[0]" -> "spw_sincere(0)$0"	[label=plot_readability];
	"plot_readability[0]" -> "lpw_sincere(0)$0"	[label=plot_readability];
	"plot_readability[0]" -> "fre_sincere(0)$0"	[label=plot_readability];
	"plot_readability[0]" -> "fkg_sincere(0)$0"	[label=plot_readability];
	"plot_readability[0]" -> "fog_sincere(0)$0"	[label=plot_readability];
	"plot_readability[0]" -> "ari_sincere(0)$0"	[label=plot_readability];
	"plot_readability[0]" -> "cli_sincere(0)$0"	[label=plot_readability];
	"plot_readability[0]" -> "lwf_sincere(0)$0"	[label=plot_readability];
	"plot_readability[0]" -> "dcr_sincere(0)$0"	[label=plot_readability];
	"plot_readability[0]" -> "con_sincere(0)$0"	[label=plot_readability];
	"syllable_sincere(0)$0" -> "np(0)"	[label=array];
	"syllable_sincere(0)$0" -> "textstat(0)"	[label=array];
	"syllable_sincere(0)$0" -> "quora_train(0)$1"	[label=array];
	"syllable_sincere(0)$0" -> "question_text(0)"	[label=array];
	"syllable_sincere(0)$0" -> "target(0)"	[label=array];
	"syllable_sincere(0)$0" -> "0(0)"	[label=array];
	"lexicon_sincere(0)$0" -> "np(0)"	[label=array];
	"lexicon_sincere(0)$0" -> "textstat(0)"	[label=array];
	"lexicon_sincere(0)$0" -> "quora_train(0)$1"	[label=array];
	"lexicon_sincere(0)$0" -> "question_text(0)"	[label=array];
	"lexicon_sincere(0)$0" -> "target(0)"	[label=array];
	"lexicon_sincere(0)$0" -> "0(0)"	[label=array];
	"length_sincere(0)$0" -> "np(0)"	[label=array];
	"length_sincere(0)$0" -> "quora_train(0)$1"	[label=array];
	"length_sincere(0)$0" -> "question_text(0)"	[label=array];
	"length_sincere(0)$0" -> "target(0)"	[label=array];
	"length_sincere(0)$0" -> "0(0)"	[label=array];
	"length_sincere(0)$0" -> "len(0)"	[label=array];
	"spw_sincere(0)$0" -> "np(0)"	[label=array];
	"spw_sincere(0)$0" -> "textstat(0)"	[label=array];
	"spw_sincere(0)$0" -> "quora_train(0)$1"	[label=array];
	"spw_sincere(0)$0" -> "question_text(0)"	[label=array];
	"spw_sincere(0)$0" -> "target(0)"	[label=array];
	"spw_sincere(0)$0" -> "0(0)"	[label=array];
	"lpw_sincere(0)$0" -> "np(0)"	[label=array];
	"lpw_sincere(0)$0" -> "textstat(0)"	[label=array];
	"lpw_sincere(0)$0" -> "quora_train(0)$1"	[label=array];
	"lpw_sincere(0)$0" -> "question_text(0)"	[label=array];
	"lpw_sincere(0)$0" -> "target(0)"	[label=array];
	"lpw_sincere(0)$0" -> "0(0)"	[label=array];
	"fre_sincere(0)$0" -> "np(0)"	[label=array];
	"fre_sincere(0)$0" -> "textstat(0)"	[label=array];
	"fre_sincere(0)$0" -> "quora_train(0)$1"	[label=array];
	"fre_sincere(0)$0" -> "question_text(0)"	[label=array];
	"fre_sincere(0)$0" -> "target(0)"	[label=array];
	"fre_sincere(0)$0" -> "0(0)"	[label=array];
	"fkg_sincere(0)$0" -> "np(0)"	[label=array];
	"fkg_sincere(0)$0" -> "textstat(0)"	[label=array];
	"fkg_sincere(0)$0" -> "quora_train(0)$1"	[label=array];
	"fkg_sincere(0)$0" -> "question_text(0)"	[label=array];
	"fkg_sincere(0)$0" -> "target(0)"	[label=array];
	"fkg_sincere(0)$0" -> "0(0)"	[label=array];
	"fog_sincere(0)$0" -> "np(0)"	[label=array];
	"fog_sincere(0)$0" -> "textstat(0)"	[label=array];
	"fog_sincere(0)$0" -> "quora_train(0)$1"	[label=array];
	"fog_sincere(0)$0" -> "question_text(0)"	[label=array];
	"fog_sincere(0)$0" -> "target(0)"	[label=array];
	"fog_sincere(0)$0" -> "0(0)"	[label=array];
	"ari_sincere(0)$0" -> "np(0)"	[label=array];
	"ari_sincere(0)$0" -> "textstat(0)"	[label=array];
	"ari_sincere(0)$0" -> "quora_train(0)$1"	[label=array];
	"ari_sincere(0)$0" -> "question_text(0)"	[label=array];
	"ari_sincere(0)$0" -> "target(0)"	[label=array];
	"ari_sincere(0)$0" -> "0(0)"	[label=array];
	"cli_sincere(0)$0" -> "np(0)"	[label=array];
	"cli_sincere(0)$0" -> "textstat(0)"	[label=array];
	"cli_sincere(0)$0" -> "quora_train(0)$1"	[label=array];
	"cli_sincere(0)$0" -> "question_text(0)"	[label=array];
	"cli_sincere(0)$0" -> "target(0)"	[label=array];
	"cli_sincere(0)$0" -> "0(0)"	[label=array];
	"lwf_sincere(0)$0" -> "np(0)"	[label=array];
	"lwf_sincere(0)$0" -> "textstat(0)"	[label=array];
	"lwf_sincere(0)$0" -> "quora_train(0)$1"	[label=array];
	"lwf_sincere(0)$0" -> "question_text(0)"	[label=array];
	"lwf_sincere(0)$0" -> "target(0)"	[label=array];
	"lwf_sincere(0)$0" -> "0(0)"	[label=array];
	"dcr_sincere(0)$0" -> "np(0)"	[label=array];
	"dcr_sincere(0)$0" -> "textstat(0)"	[label=array];
	"dcr_sincere(0)$0" -> "quora_train(0)$1"	[label=array];
	"dcr_sincere(0)$0" -> "question_text(0)"	[label=array];
	"dcr_sincere(0)$0" -> "target(0)"	[label=array];
	"dcr_sincere(0)$0" -> "0(0)"	[label=array];
	"con_sincere(0)$0" -> "np(0)"	[label=array];
	"con_sincere(0)$0" -> "quora_train(0)$1"	[label=array];
	"con_sincere(0)$0" -> "question_text(0)"	[label=array];
	"con_sincere(0)$0" -> "target(0)"	[label=array];
	"con_sincere(0)$0" -> "0(0)"	[label=array];
	"con_sincere(0)$0" -> "consensus_all(0)"	[label=array];
	"b(2)" -> "plot_readability[1]"	[label=_argToVar];
	"plot_readability[1]" -> "syllable_insincere(0)$0"	[label=plot_readability];
	"plot_readability[1]" -> "lexicon_insincere(0)$0"	[label=plot_readability];
	"plot_readability[1]" -> "length_insincere(0)$0"	[label=plot_readability];
	"plot_readability[1]" -> "spw_insincere(0)$0"	[label=plot_readability];
	"plot_readability[1]" -> "lpw_insincere(0)$0"	[label=plot_readability];
	"plot_readability[1]" -> "fre_insincere(0)$0"	[label=plot_readability];
	"plot_readability[1]" -> "fkg_insincere(0)$0"	[label=plot_readability];
	"plot_readability[1]" -> "fog_insincere(0)$0"	[label=plot_readability];
	"plot_readability[1]" -> "ari_insincere(0)$0"	[label=plot_readability];
	"plot_readability[1]" -> "cli_insincere(0)$0"	[label=plot_readability];
	"plot_readability[1]" -> "lwf_insincere(0)$0"	[label=plot_readability];
	"plot_readability[1]" -> "dcr_insincere(0)$0"	[label=plot_readability];
	"plot_readability[1]" -> "con_insincere(0)$0"	[label=plot_readability];
	"syllable_insincere(0)$0" -> "np(0)"	[label=array];
	"syllable_insincere(0)$0" -> "textstat(0)"	[label=array];
	"syllable_insincere(0)$0" -> "quora_train(0)$1"	[label=array];
	"syllable_insincere(0)$0" -> "question_text(0)"	[label=array];
	"syllable_insincere(0)$0" -> "target(0)"	[label=array];
	"syllable_insincere(0)$0" -> "1(0)"	[label=array];
	"lexicon_insincere(0)$0" -> "np(0)"	[label=array];
	"lexicon_insincere(0)$0" -> "textstat(0)"	[label=array];
	"lexicon_insincere(0)$0" -> "quora_train(0)$1"	[label=array];
	"lexicon_insincere(0)$0" -> "question_text(0)"	[label=array];
	"lexicon_insincere(0)$0" -> "target(0)"	[label=array];
	"lexicon_insincere(0)$0" -> "1(0)"	[label=array];
	"length_insincere(0)$0" -> "np(0)"	[label=array];
	"length_insincere(0)$0" -> "quora_train(0)$1"	[label=array];
	"length_insincere(0)$0" -> "question_text(0)"	[label=array];
	"length_insincere(0)$0" -> "target(0)"	[label=array];
	"length_insincere(0)$0" -> "1(0)"	[label=array];
	"length_insincere(0)$0" -> "len(0)"	[label=array];
	"spw_insincere(0)$0" -> "np(0)"	[label=array];
	"spw_insincere(0)$0" -> "textstat(0)"	[label=array];
	"spw_insincere(0)$0" -> "quora_train(0)$1"	[label=array];
	"spw_insincere(0)$0" -> "question_text(0)"	[label=array];
	"spw_insincere(0)$0" -> "target(0)"	[label=array];
	"spw_insincere(0)$0" -> "1(0)"	[label=array];
	"lpw_insincere(0)$0" -> "np(0)"	[label=array];
	"lpw_insincere(0)$0" -> "textstat(0)"	[label=array];
	"lpw_insincere(0)$0" -> "quora_train(0)$1"	[label=array];
	"lpw_insincere(0)$0" -> "question_text(0)"	[label=array];
	"lpw_insincere(0)$0" -> "target(0)"	[label=array];
	"lpw_insincere(0)$0" -> "1(0)"	[label=array];
	"fre_insincere(0)$0" -> "np(0)"	[label=array];
	"fre_insincere(0)$0" -> "textstat(0)"	[label=array];
	"fre_insincere(0)$0" -> "quora_train(0)$1"	[label=array];
	"fre_insincere(0)$0" -> "question_text(0)"	[label=array];
	"fre_insincere(0)$0" -> "target(0)"	[label=array];
	"fre_insincere(0)$0" -> "1(0)"	[label=array];
	"fkg_insincere(0)$0" -> "np(0)"	[label=array];
	"fkg_insincere(0)$0" -> "textstat(0)"	[label=array];
	"fkg_insincere(0)$0" -> "quora_train(0)$1"	[label=array];
	"fkg_insincere(0)$0" -> "question_text(0)"	[label=array];
	"fkg_insincere(0)$0" -> "target(0)"	[label=array];
	"fkg_insincere(0)$0" -> "1(0)"	[label=array];
	"fog_insincere(0)$0" -> "np(0)"	[label=array];
	"fog_insincere(0)$0" -> "textstat(0)"	[label=array];
	"fog_insincere(0)$0" -> "quora_train(0)$1"	[label=array];
	"fog_insincere(0)$0" -> "question_text(0)"	[label=array];
	"fog_insincere(0)$0" -> "target(0)"	[label=array];
	"fog_insincere(0)$0" -> "1(0)"	[label=array];
	"ari_insincere(0)$0" -> "np(0)"	[label=array];
	"ari_insincere(0)$0" -> "textstat(0)"	[label=array];
	"ari_insincere(0)$0" -> "quora_train(0)$1"	[label=array];
	"ari_insincere(0)$0" -> "question_text(0)"	[label=array];
	"ari_insincere(0)$0" -> "target(0)"	[label=array];
	"ari_insincere(0)$0" -> "1(0)"	[label=array];
	"cli_insincere(0)$0" -> "np(0)"	[label=array];
	"cli_insincere(0)$0" -> "textstat(0)"	[label=array];
	"cli_insincere(0)$0" -> "quora_train(0)$1"	[label=array];
	"cli_insincere(0)$0" -> "question_text(0)"	[label=array];
	"cli_insincere(0)$0" -> "target(0)"	[label=array];
	"cli_insincere(0)$0" -> "1(0)"	[label=array];
	"lwf_insincere(0)$0" -> "np(0)"	[label=array];
	"lwf_insincere(0)$0" -> "textstat(0)"	[label=array];
	"lwf_insincere(0)$0" -> "quora_train(0)$1"	[label=array];
	"lwf_insincere(0)$0" -> "question_text(0)"	[label=array];
	"lwf_insincere(0)$0" -> "target(0)"	[label=array];
	"lwf_insincere(0)$0" -> "1(0)"	[label=array];
	"dcr_insincere(0)$0" -> "np(0)"	[label=array];
	"dcr_insincere(0)$0" -> "textstat(0)"	[label=array];
	"dcr_insincere(0)$0" -> "quora_train(0)$1"	[label=array];
	"dcr_insincere(0)$0" -> "question_text(0)"	[label=array];
	"dcr_insincere(0)$0" -> "target(0)"	[label=array];
	"dcr_insincere(0)$0" -> "1(0)"	[label=array];
	"con_insincere(0)$0" -> "np(0)"	[label=array];
	"con_insincere(0)$0" -> "quora_train(0)$1"	[label=array];
	"con_insincere(0)$0" -> "question_text(0)"	[label=array];
	"con_insincere(0)$0" -> "target(0)"	[label=array];
	"con_insincere(0)$0" -> "1(0)"	[label=array];
	"con_insincere(0)$0" -> "consensus_all(0)"	[label=array];
	"title(2)" -> "plot_readability[2]"	[label=_argToVar];
	"plot_readability[2]" -> "Syllable Analysis(0)"	[label=plot_readability];
	"plot_readability[2]" -> "Lexicon Analysis(0)"	[label=plot_readability];
	"plot_readability[2]" -> "Question Length(0)"	[label=plot_readability];
	"plot_readability[2]" -> "Average syllables per word(0)"	[label=plot_readability];
	"plot_readability[2]" -> "Average letters per word(0)"	[label=plot_readability];
	"plot_readability[2]" -> "Flesch Reading Ease(0)"	[label=plot_readability];
	"plot_readability[2]" -> "Flesch Kincaid Grade(0)"	[label=plot_readability];
	"plot_readability[2]" -> "The Fog Scale (Gunning FOG Formula)(0)"	[label=plot_readability];
	"plot_readability[2]" -> "Automated Readability Index(0)"	[label=plot_readability];
	"plot_readability[2]" -> "The Coleman-Liau Index(0)"	[label=plot_readability];
	"plot_readability[2]" -> "Linsear Write Formula(0)"	[label=plot_readability];
	"plot_readability[2]" -> "Dale-Chall Readability Score(0)"	[label=plot_readability];
	"plot_readability[2]" -> "Readability Consensus based upon all the above tests(0)"	[label=plot_readability];
	"Syllable Analysis(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"Lexicon Analysis(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"Question Length(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"Average syllables per word(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"Average letters per word(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"Flesch Reading Ease(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"Flesch Kincaid Grade(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"The Fog Scale (Gunning FOG Formula)(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"Automated Readability Index(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"The Coleman-Liau Index(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"Linsear Write Formula(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"Dale-Chall Readability Score(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"Readability Consensus based upon all the above tests(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"bins(2)" -> "plot_readability[3]"	[label=_argToVar];
	"plot_readability[3]" -> "1(0)"	[label=plot_readability];
	"plot_readability[3]" -> "5(0)"	[label=plot_readability];
	"plot_readability[3]" -> "4(0)"	[label=plot_readability];
	"plot_readability[3]" -> "40(0)"	[label=plot_readability];
	"plot_readability[3]" -> "0.2(0)"	[label=plot_readability];
	"plot_readability[3]" -> "2(0)"	[label=plot_readability];
	"plot_readability[3]" -> "20(0)"	[label=plot_readability];
	"plot_readability[3]" -> "10(0)"	[label=plot_readability];
	"5(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"4(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"40(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"0.2(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"2(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"20(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"10(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"colors(2)" -> "plot_readability[4]"	[label=_argToVar];
	"plot_readability[4]" -> "[<_ast.Constant object at 0x12f85e9d0>, <_ast.Constant object at 0x12f85ebe0>](0)"	[label=plot_readability];
	"plot_readability[4]" -> "[<_ast.Constant object at 0x12f8f5610>, <_ast.Constant object at 0x12f8f5b50>](0)"	[label=plot_readability];
	"plot_readability[4]" -> "[<_ast.Constant object at 0x12f8e5220>, <_ast.Constant object at 0x12f8e57c0>](0)"	[label=plot_readability];
	"plot_readability[4]" -> "[<_ast.Constant object at 0x12fadea30>, <_ast.Constant object at 0x12fade3a0>](0)"	[label=plot_readability];
	"plot_readability[4]" -> "[<_ast.Constant object at 0x12f9a47f0>, <_ast.Constant object at 0x12f9a4820>](0)"	[label=plot_readability];
	"plot_readability[4]" -> "[<_ast.Constant object at 0x12f88e370>, <_ast.Constant object at 0x12f88e3a0>](0)"	[label=plot_readability];
	"plot_readability[4]" -> "[<_ast.Constant object at 0x12f88eeb0>, <_ast.Constant object at 0x12f88eee0>](0)"	[label=plot_readability];
	"plot_readability[4]" -> "[<_ast.Constant object at 0x12f8a2a30>, <_ast.Constant object at 0x12f8a2a60>](0)"	[label=plot_readability];
	"plot_readability[4]" -> "[<_ast.Constant object at 0x12f8955b0>, <_ast.Constant object at 0x12f8955e0>](0)"	[label=plot_readability];
	"plot_readability[4]" -> "[<_ast.Constant object at 0x12f894130>, <_ast.Constant object at 0x12f894190>](0)"	[label=plot_readability];
	"[<_ast.Constant object at 0x12f85e9d0>, <_ast.Constant object at 0x12f85ebe0>](0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x12f8f5610>, <_ast.Constant object at 0x12f8f5b50>](0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x12f8e5220>, <_ast.Constant object at 0x12f8e57c0>](0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x12fadea30>, <_ast.Constant object at 0x12fade3a0>](0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x12f9a47f0>, <_ast.Constant object at 0x12f9a4820>](0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x12f88e370>, <_ast.Constant object at 0x12f88e3a0>](0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x12f88eeb0>, <_ast.Constant object at 0x12f88eee0>](0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x12f8a2a30>, <_ast.Constant object at 0x12f8a2a60>](0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x12f8955b0>, <_ast.Constant object at 0x12f8955e0>](0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x12f894130>, <_ast.Constant object at 0x12f894190>](0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"trace1(2)$0" -> "bins(2)"	[label=create_distplot];
	"trace1(2)$0" -> "colors(2)"	[label=create_distplot];
	"trace1(2)$0" -> "ff(2)"	[label=create_distplot];
	"trace1(2)$0" -> "[<_ast.Name object at 0x12f8ab430>, <_ast.Name object at 0x12f8ab8b0>](2)"	[label=create_distplot];
	"trace1(2)$0" -> "[<_ast.Constant object at 0x12f8ab2b0>, <_ast.Constant object at 0x12f8ab040>](2)"	[label=create_distplot];
	"trace1(2)$0" -> "False(2)"	[label=create_distplot];
	"trace1(2)$1" -> "trace1(2)$0"	[label=update];
	"iplot[0]" -> "trace1(2)$1"	[label=iplot];
	"iplot[0]" -> "trace2(2)$0"	[label=iplot];
	"iplot[0]" -> "fig(7)$0"	[label=iplot];
	"trace2(2)$0" -> "ff(2)"	[label=create_table];
	"trace2(2)$0" -> "table_data(2)$0"	[label=create_table];
	"fig(7)$0" -> "trace(7)$0"	[label=Figure];
	"fig(7)$0" -> "layout(7)$0"	[label=Figure];
	"fig(7)$0" -> "go(7)"	[label=Figure];
	"iplot[1]" -> "Distplot(2)"	[label=iplot];
	"iplot[1]" -> "Table(2)"	[label=iplot];
	"iplot[1]" -> "horizontal-bar(7)"	[label=iplot];
	"table_data(2)$0" -> "[<_ast.List object at 0x12f951550>, <_ast.List object at 0x12f951a90>, <_ast.List object at 0x12f951400>, <_ast.List object at 0x12f9513d0>, <_\
ast.List object at 0x12f951610>, <_ast.List object at 0x12f951670>, <_ast.List object at 0x12f951b20>](2)"	[label=assignedFrom];
	"len(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"text(3)" -> "consensus_all[0]"	[label=_argToVar];
	"consensus_all(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"text(4)" -> "word_generator[0]"	[label=_argToVar];
	"word(4)$0" -> "text(4)"	[label=list];
	"text(5)" -> "bigram_generator[0]"	[label=_argToVar];
	"bgram(5)$0" -> "text(5)"	[label=list];
	"bgram(5)$0" -> "nltk(5)"	[label=list];
	"bgram(5)$1" -> "bgram(5)$1"	[label=assignedFrom];
	"bgram(5)$1" -> " (5)"	[label=assignedFrom];
	"bgram(5)$1" -> "a(5)"	[label=assignedFrom];
	"bgram(5)$1" -> "b(5)"	[label=assignedFrom];
	"text(6)" -> "trigram_generator[0]"	[label=_argToVar];
	"tgram(6)$0" -> "text(6)"	[label=list];
	"tgram(6)$0" -> "nltk(6)"	[label=list];
	"tgram(6)$1" -> "tgram(6)$1"	[label=assignedFrom];
	"tgram(6)$1" -> " (6)"	[label=assignedFrom];
	"tgram(6)$1" -> "a(6)"	[label=assignedFrom];
	"tgram(6)$1" -> "b(6)"	[label=assignedFrom];
	"tgram(6)$1" -> "c(6)"	[label=assignedFrom];
	"sincere_words(0)$0" -> "sincere_questions(0)$0"	[label=progress_apply];
	"sincere_words(0)$0" -> "word_generator(0)"	[label=progress_apply];
	"word_generator(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"insincere_words(0)$0" -> "insincere_questions(0)$0"	[label=progress_apply];
	"insincere_words(0)$0" -> "word_generator(0)"	[label=progress_apply];
	"sincere_bigrams(0)$0" -> "sincere_questions(0)$0"	[label=progress_apply];
	"sincere_bigrams(0)$0" -> "bigram_generator(0)"	[label=progress_apply];
	"bigram_generator(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"insincere_bigrams(0)$0" -> "insincere_questions(0)$0"	[label=progress_apply];
	"insincere_bigrams(0)$0" -> "bigram_generator(0)"	[label=progress_apply];
	"sincere_trigrams(0)$0" -> "sincere_questions(0)$0"	[label=progress_apply];
	"sincere_trigrams(0)$0" -> "trigram_generator(0)"	[label=progress_apply];
	"trigram_generator(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"insincere_trigrams(0)$0" -> "insincere_questions(0)$0"	[label=progress_apply];
	"insincere_trigrams(0)$0" -> "trigram_generator(0)"	[label=progress_apply];
	"[<_ast.Constant object at 0x12f8a41f0>, <_ast.Constant object at 0x12f8a44f0>, <_ast.Constant object at 0x12f8a4430>, <_ast.Constant \
object at 0x12f8a4460>, <_ast.Constant object at 0x12f8a47f0>, <_ast.Constant object at 0x12f8a47c0>, <_ast.Constant object at 0x12f8a45b0>, <_\
ast.Constant object at 0x12f8a4820>, <_ast.Constant object at 0x12f8a41c0>, <_ast.Constant object at 0x12f8a46a0>, <_ast.Constant \
object at 0x12f8a4be0>, <_ast.Constant object at 0x12f8a4190>, <_ast.Constant object at 0x12f8a4e80>, <_ast.Constant object at 0x12f8a4df0>, <_\
ast.Constant object at 0x12f8a4e50>, <_ast.Constant object at 0x12f8a4e20>, <_ast.Constant object at 0x12f8a4d30>, <_ast.Constant \
object at 0x12f8a4c10>, <_ast.Constant object at 0x12f8a4c70>, <_ast.Constant object at 0x12f8a4c40>, <_ast.Constant object at 0x12f8a4940>, <_\
ast.Constant object at 0x12f8a4760>, <_ast.Constant object at 0x12f8a4970>, <_ast.Constant object at 0x12f8a48b0>, <_ast.Constant \
object at 0x12f8a48e0>, <_ast.Constant object at 0x12f8a4910>, <_ast.Constant object at 0x12f8a4640>, <_ast.Constant object at 0x12f8a46d0>, <_\
ast.Constant object at 0x12f8a45e0>, <_ast.Constant object at 0x12f8a4880>, <_ast.Constant object at 0x12f8a4a00>, <_ast.Constant \
object at 0x12f8a4a90>, <_ast.Constant object at 0x12f8a4790>, <_ast.Constant object at 0x12f8a4a30>, <_ast.Constant object at 0x12f8a4a60>, <_\
ast.Constant object at 0x12f8a4ac0>, <_ast.Constant object at 0x12f8a4b20>, <_ast.Constant object at 0x12f8a4bb0>, <_ast.Constant \
object at 0x12f8a4b50>, <_ast.Constant object at 0x12f8a49d0>, <_ast.Constant object at 0x12f8a4b80>](0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"color_brewer(0)$0" -> "[<_ast.Constant object at 0x12f8a41f0>, <_ast.Constant object at 0x12f8a44f0>, <_ast.Constant object at 0x12f8a4430>, <_ast.Constant \
object at 0x12f8a4460>, <_ast.Constant object at 0x12f8a47f0>, <_ast.Constant object at 0x12f8a47c0>, <_ast.Constant object at 0x12f8a45b0>, <_\
ast.Constant object at 0x12f8a4820>, <_ast.Constant object at 0x12f8a41c0>, <_ast.Constant object at 0x12f8a46a0>, <_ast.Constant \
object at 0x12f8a4be0>, <_ast.Constant object at 0x12f8a4190>, <_ast.Constant object at 0x12f8a4e80>, <_ast.Constant object at 0x12f8a4df0>, <_\
ast.Constant object at 0x12f8a4e50>, <_ast.Constant object at 0x12f8a4e20>, <_ast.Constant object at 0x12f8a4d30>, <_ast.Constant \
object at 0x12f8a4c10>, <_ast.Constant object at 0x12f8a4c70>, <_ast.Constant object at 0x12f8a4c40>, <_ast.Constant object at 0x12f8a4940>, <_\
ast.Constant object at 0x12f8a4760>, <_ast.Constant object at 0x12f8a4970>, <_ast.Constant object at 0x12f8a48b0>, <_ast.Constant \
object at 0x12f8a48e0>, <_ast.Constant object at 0x12f8a4910>, <_ast.Constant object at 0x12f8a4640>, <_ast.Constant object at 0x12f8a46d0>, <_\
ast.Constant object at 0x12f8a45e0>, <_ast.Constant object at 0x12f8a4880>, <_ast.Constant object at 0x12f8a4a00>, <_ast.Constant \
object at 0x12f8a4a90>, <_ast.Constant object at 0x12f8a4790>, <_ast.Constant object at 0x12f8a4a30>, <_ast.Constant object at 0x12f8a4a60>, <_\
ast.Constant object at 0x12f8a4ac0>, <_ast.Constant object at 0x12f8a4b20>, <_ast.Constant object at 0x12f8a4bb0>, <_ast.Constant \
object at 0x12f8a4b50>, <_ast.Constant object at 0x12f8a49d0>, <_ast.Constant object at 0x12f8a4b80>](0)"	[label=assignedFrom];
	"v(7)" -> "ngram_visualizer[0]"	[label=_argToVar];
	"ngram_visualizer[0]" -> "pd(8)"	[label=ngram_visualizer];
	"t(7)" -> "ngram_visualizer[1]"	[label=_argToVar];
	"ngram_visualizer[1]" -> "ngram_list(8)$1"	[label=ngram_visualizer];
	"ngram_list(8)$1" -> "ngram_list(8)$0"	[label=extend];
	"ngram_list(8)$1" -> "i(8)"	[label=extend];
	"X(7)$0" -> "v(7)"	[label=assignedFrom];
	"Y(7)$0" -> "v(7)"	[label=assignedFrom];
	"trace(7)$0" -> "[<_ast.Call object at 0x12f8a4d90>](7)"	[label=assignedFrom];
	"layout(7)$0" -> "t(7)"	[label=Layout];
	"layout(7)$0" -> "go(7)"	[label=Layout];
	"layout(7)$0" -> "200(7)"	[label=Layout];
	"layout(7)$0" -> "400(7)"	[label=Layout];
	"ngrams(8)" -> "ngram_plot[0]"	[label=_argToVar];
	"ngram_plot[0]" -> "sincere_words(0)$0"	[label=ngram_plot];
	"ngram_plot[0]" -> "insincere_words(0)$0"	[label=ngram_plot];
	"ngram_plot[0]" -> "sincere_bigrams(0)$0"	[label=ngram_plot];
	"ngram_plot[0]" -> "insincere_bigrams(0)$0"	[label=ngram_plot];
	"ngram_plot[0]" -> "sincere_trigrams(0)$0"	[label=ngram_plot];
	"ngram_plot[0]" -> "insincere_trigrams(0)$0"	[label=ngram_plot];
	"title(8)" -> "ngram_plot[1]"	[label=_argToVar];
	"ngram_plot[1]" -> "Top Sincere Words(0)"	[label=ngram_plot];
	"ngram_plot[1]" -> "Top Insincere Words(0)"	[label=ngram_plot];
	"ngram_plot[1]" -> "Top 20 Sincere Bigrams(0)"	[label=ngram_plot];
	"ngram_plot[1]" -> "Top 20 Insincere Bigrams(0)"	[label=ngram_plot];
	"ngram_plot[1]" -> "Top 20 Sincere Trigrams(0)"	[label=ngram_plot];
	"ngram_plot[1]" -> "Top 20 Insincere Trigrams(0)"	[label=ngram_plot];
	"Top Sincere Words(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"Top Insincere Words(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"Top 20 Sincere Bigrams(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"Top 20 Insincere Bigrams(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"Top 20 Sincere Trigrams(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"Top 20 Insincere Trigrams(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"ngram_list(8)$0" -> "[](8)"	[label=assignedFrom];
	"i(8)" -> "ngrams(8)"	[label=iteratorOf];
	"i(8)" -> "tqdm(8)"	[label=iteratorOf];
	"i(8)" -> "0(8)"	[label=iteratorOf];
	"random(8)$0" -> "random(8)"	[label=shuffle];
	"random(8)$0" -> "color_brewer(8)"	[label=shuffle];
	"ngram_visualizer[2]" -> "20(8)"	[label=ngram_visualizer];
	"ngram_visualizer[3]" -> "title(8)"	[label=ngram_visualizer];
	"vectorizer_sincere(0)$0" -> "True(0)"	[label=CountVectorizer];
	"vectorizer_sincere(0)$0" -> "5(0)"	[label=CountVectorizer];
	"vectorizer_sincere(0)$0" -> "0.9(0)"	[label=CountVectorizer];
	"vectorizer_sincere(0)$0" -> "english(0)"	[label=CountVectorizer];
	"vectorizer_sincere(0)$0" -> "[a-zA-Z\-][a-zA-Z\-]{2,}(0)"	[label=CountVectorizer];
	"0.9(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"english(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"[a-zA-Z\-][a-zA-Z\-]{2,}(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"sincere_questions_vectorized(0)$0" -> "sincere_questions(0)$0"	[label=fit_transform];
	"sincere_questions_vectorized(0)$0" -> "vectorizer_sincere(0)$0"	[label=fit_transform];
	"vectorizer_insincere(0)$0" -> "True(0)"	[label=CountVectorizer];
	"vectorizer_insincere(0)$0" -> "5(0)"	[label=CountVectorizer];
	"vectorizer_insincere(0)$0" -> "0.9(0)"	[label=CountVectorizer];
	"vectorizer_insincere(0)$0" -> "english(0)"	[label=CountVectorizer];
	"vectorizer_insincere(0)$0" -> "[a-zA-Z\-][a-zA-Z\-]{2,}(0)"	[label=CountVectorizer];
	"insincere_questions_vectorized(0)$0" -> "insincere_questions(0)$0"	[label=fit_transform];
	"insincere_questions_vectorized(0)$0" -> "vectorizer_insincere(0)$0"	[label=fit_transform];
	"lda_sincere(0)$0" -> "True(0)"	[label=LatentDirichletAllocation];
	"lda_sincere(0)$0" -> "5(0)"	[label=LatentDirichletAllocation];
	"lda_sincere(0)$0" -> "10(0)"	[label=LatentDirichletAllocation];
	"lda_sincere(0)$0" -> "online(0)"	[label=LatentDirichletAllocation];
	"online(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"sincere_lda(0)$0" -> "sincere_questions_vectorized(0)$0"	[label=fit_transform];
	"sincere_lda(0)$0" -> "lda_sincere(0)$0"	[label=fit_transform];
	"lda_insincere(0)$0" -> "True(0)"	[label=LatentDirichletAllocation];
	"lda_insincere(0)$0" -> "5(0)"	[label=LatentDirichletAllocation];
	"lda_insincere(0)$0" -> "10(0)"	[label=LatentDirichletAllocation];
	"lda_insincere(0)$0" -> "online(0)"	[label=LatentDirichletAllocation];
	"insincere_lda(0)$0" -> "insincere_questions_vectorized(0)$0"	[label=fit_transform];
	"insincere_lda(0)$0" -> "lda_insincere(0)$0"	[label=fit_transform];
	"model(9)" -> "selected_topics[0]"	[label=_argToVar];
	"selected_topics[0]" -> "lda_sincere(0)$0"	[label=selected_topics];
	"selected_topics[0]" -> "lda_insincere(0)$0"	[label=selected_topics];
	"selected_topics[1]" -> "vectorizer_sincere(0)$0"	[label=selected_topics];
	"selected_topics[1]" -> "vectorizer_insincere(0)$0"	[label=selected_topics];
	"top_n(9)" -> "selected_topics[2]"	[label=_argToVar];
	"topic(9)" -> "model(9)"	[label=iteratorOf];
	"topic(9)" -> "enumerate(9)"	[label=iteratorOf];
	"print[2]" -> "topic(9)"	[label=print];
	"print[3]" -> "i(9)"	[label=print];
	"print[4]" -> "i(9)"	[label=print];
	"print[5]" -> "topic(9)"	[label=print];
	"print[6]" -> "top_n(9)"	[label=print];
	"print[7]" -> "1(9)"	[label=print];
	"print[8]" -> "1(9)"	[label=print];
	"pyLDAvis(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"pyLDAvis(0)$0" -> "pyLDAvis(0)"	[label=enable_notebook];
	"dash(0)$0" -> "vectorizer_sincere(0)$0"	[label=prepare];
	"dash(0)$0" -> "sincere_questions_vectorized(0)$0"	[label=prepare];
	"dash(0)$0" -> "lda_sincere(0)$0"	[label=prepare];
	"dash(0)$0" -> "pyLDAvis(0)$0"	[label=prepare];
	"dash(0)$0" -> "tsne(0)"	[label=prepare];
	"tsne(0)" -> "analyzing-quora-for-the-insinceres.ipynb"	[label=appearsIn];
	"pyLDAvis(0)$1" -> "pyLDAvis(0)$0"	[label=enable_notebook];
	"dash(0)$1" -> "vectorizer_insincere(0)$0"	[label=prepare];
	"dash(0)$1" -> "insincere_questions_vectorized(0)$0"	[label=prepare];
	"dash(0)$1" -> "lda_insincere(0)$0"	[label=prepare];
	"dash(0)$1" -> "tsne(0)"	[label=prepare];
	"dash(0)$1" -> "pyLDAvis(0)$1"	[label=prepare];
}

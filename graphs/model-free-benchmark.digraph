digraph { 
"pandas" -> "model-free-benchmark.ipynb" [label = "importedBy"]
"pd(0)" -> "model-free-benchmark.ipynb" [label = "appearsIn"]
"pd(0)" -> "pandas" [label = "assignedFrom"]
"numpy" -> "model-free-benchmark.ipynb" [label = "importedBy"]
"np(0)" -> "model-free-benchmark.ipynb" [label = "appearsIn"]
"np(0)" -> "numpy" [label = "assignedFrom"]
"train(0)$0" -> "pd(0)" [label = "read_csv"]
"train(0)$1" -> "train(0)$0" [label = "drop_duplicates"]
"dist(0)$0" -> "train(0)$1" [label = "hist"]
"train_own(0)$0" -> "train(0)$1" [label = "assignedFrom"]
"train_own(0)$0" -> "train(0)$1" [label = "assignedFrom"]
"train_own(0)$0" -> "train(0)$1" [label = "assignedFrom"]
"train_other(0)$0" -> "train(0)$1" [label = "assignedFrom"]
"train_other(0)$0" -> "train(0)$1" [label = "assignedFrom"]
"train_other(0)$0" -> "train(0)$1" [label = "assignedFrom"]
"matplotlib.pyplot" -> "model-free-benchmark.ipynb" [label = "importedBy"]
"plt(0)" -> "model-free-benchmark.ipynb" [label = "appearsIn"]
"plt(0)" -> "matplotlib.pyplot" [label = "assignedFrom"]
"own_cdf(0)$0" -> "np(0)" [label = "cumsum"]
"own_cdf(0)$0" -> "train_own(0)$0" [label = "cumsum"]
"other_cdf(0)$0" -> "np(0)" [label = "cumsum"]
"other_cdf(0)$0" -> "train_other(0)$0" [label = "cumsum"]
"y_train(0)$0" -> "train(0)$1" [label = "assignedFrom"]
"y_ans(0)$0" -> "np(0)" [label = "zeros"]
"len(0)" -> "model-free-benchmark.ipynb" [label = "appearsIn"]
"y_ans(0)$0" -> "len(0)" [label = "zeros"]
"y_ans(0)$0" -> "train(0)$1" [label = "zeros"]
"enumerate(0)" -> "model-free-benchmark.ipynb" [label = "appearsIn"]
"i(0)" -> "model-free-benchmark.ipynb" [label = "appearsIn"]
"i(0)" -> "enumerate(0)" [label = "iteratorOf"]
"p(0)" -> "model-free-benchmark.ipynb" [label = "appearsIn"]
"p(0)" -> "enumerate(0)" [label = "iteratorOf"]
"i(0)" -> "y_train(0)$0" [label = "iteratorOf"]
"p(0)" -> "y_train(0)$0" [label = "iteratorOf"]
"range(0)" -> "model-free-benchmark.ipynb" [label = "appearsIn"]
"j(0)" -> "model-free-benchmark.ipynb" [label = "appearsIn"]
"j(0)" -> "range(0)" [label = "iteratorOf"]
"print[0]" -> "np(0)" [label = "print"]
"print[1]" -> "np(0)" [label = "print"]
"print[2]" -> "own_cdf(0)$0" [label = "print"]
"print[3]" -> "y_ans(0)$0" [label = "print"]
"print[4]" -> "len(0)" [label = "print"]
"print[5]" -> "train(0)$1" [label = "print"]
"print[0]" -> "np(0)" [label = "print"]
"print[1]" -> "np(0)" [label = "print"]
"print[2]" -> "other_cdf(0)$0" [label = "print"]
"print[3]" -> "y_ans(0)$0" [label = "print"]
"print[4]" -> "len(0)" [label = "print"]
"print[5]" -> "train(0)$1" [label = "print"]
"matplotlib.pyplot" -> "model-free-benchmark.ipynb" [label = "importedBy"]
"plt(0)" -> "matplotlib.pyplot" [label = "assignedFrom"]
"plt(0)$0" -> "plt(0)" [label = "plot"]
"plt(0)$0" -> "own_cdf(0)$0" [label = "plot"]
"plt(0)$1" -> "plt(0)$0" [label = "plot"]
"plt(0)$1" -> "other_cdf(0)$0" [label = "plot"]
"kaggle.competitions" -> "model-free-benchmark.ipynb" [label = "importedBy"]
"nflrush" -> "kaggle.competitions" [label = "importedBy"]
"nflrush(0)" -> "model-free-benchmark.ipynb" [label = "appearsIn"]
"nflrush(0)" -> "nflrush" [label = "assignedFrom"]
"env(0)$0" -> "nflrush(0)" [label = "make_env"]
"test_df(0)" -> "model-free-benchmark.ipynb" [label = "appearsIn"]
"test_df(0)" -> "env(0)$0" [label = "iteratorOf"]
"sample_prediction_df(0)" -> "model-free-benchmark.ipynb" [label = "appearsIn"]
"sample_prediction_df(0)" -> "env(0)$0" [label = "iteratorOf"]
"cdf(0)$0" -> "np(0)" [label = "copy"]
"cdf(0)$0" -> "other_cdf(0)$0" [label = "copy"]
"sample_prediction_df(0)$0" -> "sample_prediction_df(0)" [label = "assignedFrom"]
"sample_prediction_df(0)$0" -> "cdf(0)$0" [label = "assignedFrom"]
"cdf(0)$1" -> "np(0)" [label = "copy"]
"cdf(0)$1" -> "own_cdf(0)$0" [label = "copy"]
"sample_prediction_df(0)$1" -> "sample_prediction_df(0)$0" [label = "assignedFrom"]
"sample_prediction_df(0)$1" -> "cdf(0)$1" [label = "assignedFrom"]
"env(0)$1" -> "env(0)$0" [label = "predict"]
"env(0)$1" -> "sample_prediction_df(0)$1" [label = "predict"]
"env(0)$2" -> "env(0)$1" [label = "write_submission_file"]
"print[0]" -> "sample_prediction_df(0)$1" [label = "print"]
}